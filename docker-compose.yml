version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "${CLIENT_PORT:-80}:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - client
      - server
    networks:
      - iwc-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '${NGINX_CPU_LIMIT:-0.3}'
          memory: ${NGINX_MEMORY_LIMIT:-128M}

  client:
    build:
      context: ./client
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL}
    image: ${FULL_CLIENT_IMAGE:-${DOCKER_USERNAME:-localhost}/iwc-learning-client}:${TAG:-latest}
    expose:
      - "80"
    restart: always
    depends_on:
      - server
    networks:
      - iwc-network
    deploy:
      resources:
        limits:
          cpus: '${CLIENT_CPU_LIMIT:-0.5}'
          memory: ${CLIENT_MEMORY_LIMIT:-256M}

  server:
    build: ./server
    image: ${FULL_SERVER_IMAGE:-${DOCKER_USERNAME:-localhost}/iwc-learning-server}:${TAG:-latest}
    ports:
      - "${SERVER_PORT:-5000}:5000"
    expose:
      - "5000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=${DB_HOST:-db}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-iwc_language_db}
      - PORT=${SERVER_PORT:-5000}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost}
    restart: always
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ${UPLOADS_PATH:-./uploads}:/usr/src/app/uploads
    networks:
      - iwc-network
    deploy:
      resources:
        limits:
          cpus: '${SERVER_CPU_LIMIT:-0.8}'
          memory: ${SERVER_MEMORY_LIMIT:-512M}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 60s
      timeout: 20s
      retries: 3
      start_period: 40s

  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-iwc_language_db}
      # Postgres performance tuning
      POSTGRES_SHARED_BUFFERS: ${POSTGRES_SHARED_BUFFERS:-128MB}
      POSTGRES_EFFECTIVE_CACHE_SIZE: ${POSTGRES_EFFECTIVE_CACHE_SIZE:-384MB}
      POSTGRES_WORK_MEM: ${POSTGRES_WORK_MEM:-16MB}
      POSTGRES_MAINTENANCE_WORK_MEM: ${POSTGRES_MAINTENANCE_WORK_MEM:-64MB}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - ${EXTERNAL_STORAGE_PATH:-./postgres_data}:/var/lib/postgresql/data
    networks:
      - iwc-network
    deploy:
      resources:
        limits:
          cpus: '${DB_CPU_LIMIT:-1.0}'
          memory: ${DB_MEMORY_LIMIT:-512M}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  server-uploads:
    driver_opts:
      type: none
      device: ${UPLOADS_PATH:-./uploads}
      o: bind

networks:
  iwc-network:
    driver: bridge
