version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: iwc-nginx-proxy
    ports:
      - "${CLIENT_PORT}:80"
    volumes:
      - ./client/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - client
      - server
    restart: always

  client:
    env_file:
      - ./client/.env
    build:
      context: ./client
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:3001/api}
    image: iwc-learning-client:latest
    ports:
      - "${CLIENT_PORT:-80}:80"
    restart: always
    depends_on:
      - server

  server:
    env_file:
      - ./server/.env
    build:
      context: ./server
    image: iwc-learning-server:latest
    ports:
      - "${PORT:-5000}:5000"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD-SHELL","curl -f http://localhost:${PORT:-5000}/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  db:
    image: postgres:15-alpine
    container_name: iwc-db
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME:-appdb}
      - POSTGRES_USER=${DB_USER:-youruser}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-yourpass}
      - POSTGRES_SHARED_BUFFERS=128MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=384MB
      - POSTGRES_WORK_MEM=16MB
      - POSTGRES_MAINTENANCE_WORK_MEM=64MB
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U ${DB_USER:-youruser}"]

volumes:
  db_data:
